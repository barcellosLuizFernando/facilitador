/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package telaCadastros;

import cadastros.ConfigDefault;
import ferramentas.RpaCodigos;
import ferramentas.RpaIntegrador;
import cadastros.Estabelecimento;
import cadastros.Transportador;
import conexoes.ConexaoFB;
import conexoes.ConexaoMySQL;
import ferramentas.CalculadoraRPA;
import ferramentas.ImprimeRelatorio;
import ferramentas.JNumberFormatField99;
import ferramentas.ResumoRPA;
import java.awt.event.KeyEvent;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Luiz Fernando Dill Barcellos
 */
public class RpaAnterior extends javax.swing.JInternalFrame {

    private int var_consulta;

    conexoes.ConexaoMySQL cn = new ConexaoMySQL();
    conexoes.ConexaoFB cnfb = new ConexaoFB();
    cadastros.Estabelecimento estab = new Estabelecimento();
    cadastros.Transportador transp = new Transportador();
    cadastros.ConfigDefault cd = new ConfigDefault();
    ferramentas.ResumoRPA res = new ResumoRPA();
    ferramentas.RpaCodigos rpa = new RpaCodigos();
    ferramentas.RpaIntegrador integ = new RpaIntegrador();
    ferramentas.CalculadoraRPA cRpa = new CalculadoraRPA();
    ferramentas.ImprimeRelatorio print = new ImprimeRelatorio();

    DateFormat dateOut = new SimpleDateFormat("yyyy/MM/dd");
    DateFormat dateIn = new SimpleDateFormat("dd/MM/yyyy");
    DateFormat competencia = new SimpleDateFormat("MM/yyyy");

    DecimalFormat df = new DecimalFormat("#,##0.00", new DecimalFormatSymbols(new Locale("pt", "BR")));

    TelaInicial ti = new TelaInicial();

    /**
     * Creates new form emitirRpa
     */
    public RpaAnterior() {
        initComponents();
        montaTabela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPesquisar = new javax.swing.JFrame();
        jPanel8 = new javax.swing.JPanel();
        jTxtPesquisa_Multi = new javax.swing.JTextField();
        jBtnConfirmar = new javax.swing.JButton();
        jBtnCancelar1 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTblConsulta_Multi = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTxtId = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTxtCompetencia = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTxtSequencia = new javax.swing.JTextField();
        jBtnPesquisar = new javax.swing.JButton();
        jLblStatus = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTxtIdEst = new javax.swing.JTextField();
        jTxtNomeEst = new javax.swing.JTextField();
        jBtnPesqEst = new javax.swing.JButton();
        jTxtIdTransportador = new javax.swing.JTextField();
        jTxtNomeTransportador = new javax.swing.JTextField();
        jBtnPesqTransp = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jTxtFaturamento = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTxtIRRF = new JNumberFormatField99(new DecimalFormat("#,##0.00"));
        jTxtInss = new JNumberFormatField99(new DecimalFormat("#,##0.00"));
        jLabel12 = new javax.swing.JLabel();
        jSpEmissao = new javax.swing.JSpinner();
        jPanel6 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jTxtLiquido = new javax.swing.JTextField();
        jTxtTerceiros = new JNumberFormatField99(new DecimalFormat("#,##0.00"));
        jLabel16 = new javax.swing.JLabel();
        jSpPgto = new javax.swing.JSpinner();
        jSpVlrPagar = new JNumberFormatField99(new DecimalFormat("#,##0.00"));
        jBtnAddCte = new javax.swing.JButton();
        jBtnRemoveCte = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jTxtAcum = new javax.swing.JTextField();
        jTxtAcumIrrf = new javax.swing.JTextField();
        jTxtAcumQtdeFrete = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jTxtCategoria = new javax.swing.JTextField();
        jTxtAcumTerc = new javax.swing.JTextField();
        jTxtAcumInss = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jBtnGravar = new javax.swing.JButton();
        jBtnEditar = new javax.swing.JButton();
        jBtnAdicionar = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jTxtQtdCte = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jTxtCodFolha = new javax.swing.JTextField();
        jBtnAtualizar = new javax.swing.JButton();

        jPesquisar.setTitle("Pesquisar");
        jPesquisar.setMinimumSize(new java.awt.Dimension(700, 400));

        jTxtPesquisa_Multi.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTxtPesquisa_Multi.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTxtPesquisa_MultiFocusLost(evt);
            }
        });
        jTxtPesquisa_Multi.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTxtPesquisa_MultiKeyPressed(evt);
            }
        });

        jBtnConfirmar.setText("Adicionar");
        jBtnConfirmar.setEnabled(false);
        jBtnConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnConfirmarActionPerformed(evt);
            }
        });

        jBtnCancelar1.setText("Cancelar");
        jBtnCancelar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnCancelar1ActionPerformed(evt);
            }
        });

        jTblConsulta_Multi.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTblConsulta_Multi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTblConsulta_Multi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTblConsulta_MultiMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTblConsulta_MultiMouseEntered(evt);
            }
        });
        jTblConsulta_Multi.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTblConsulta_MultiKeyPressed(evt);
            }
        });
        jScrollPane4.setViewportView(jTblConsulta_Multi);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addGap(0, 453, Short.MAX_VALUE)
                        .addComponent(jBtnCancelar1)
                        .addGap(18, 18, 18)
                        .addComponent(jBtnConfirmar))
                    .addComponent(jTxtPesquisa_Multi)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTxtPesquisa_Multi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnConfirmar)
                    .addComponent(jBtnCancelar1))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPesquisarLayout = new javax.swing.GroupLayout(jPesquisar.getContentPane());
        jPesquisar.getContentPane().setLayout(jPesquisarLayout);
        jPesquisarLayout.setHorizontalGroup(
            jPesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPesquisarLayout.setVerticalGroup(
            jPesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setClosable(true);
        setTitle("Inclusão Manual de RPA");

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setText("Código");

        jTxtId.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTxtIdFocusLost(evt);
            }
        });

        jLabel4.setText("Competência");

        jTxtCompetencia.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTxtCompetencia.setEnabled(false);

        jLabel5.setText("Sequência");

        jTxtSequencia.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTxtSequencia.setText("0");
        jTxtSequencia.setEnabled(false);

        jBtnPesquisar.setText("...");
        jBtnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnPesquisarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTxtId, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtnPesquisar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLblStatus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTxtCompetencia, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTxtSequencia, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTxtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jTxtCompetencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jTxtSequencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnPesquisar)
                    .addComponent(jLblStatus))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel2.setText("Estabelecimento");

        jLabel3.setText("Transportador");

        jTxtIdEst.setEnabled(false);
        jTxtIdEst.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTxtIdEstFocusLost(evt);
            }
        });

        jTxtNomeEst.setEnabled(false);

        jBtnPesqEst.setText("...");
        jBtnPesqEst.setEnabled(false);
        jBtnPesqEst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnPesqEstActionPerformed(evt);
            }
        });

        jTxtIdTransportador.setEnabled(false);
        jTxtIdTransportador.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTxtIdTransportadorFocusLost(evt);
            }
        });

        jTxtNomeTransportador.setEnabled(false);

        jBtnPesqTransp.setText("...");
        jBtnPesqTransp.setEnabled(false);
        jBtnPesqTransp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnPesqTranspActionPerformed(evt);
            }
        });

        jPanel4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel6.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("CONHECIMENTOS DE FRETE");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel7.setText("Faturamento");

        jTxtFaturamento.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTxtFaturamento.setText("0,00");
        jTxtFaturamento.setEnabled(false);

        jLabel10.setText("I.N.S.S.");

        jLabel11.setText("I.R.R.F.");

        jTxtIRRF.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTxtIRRF.setText("0,00");
        jTxtIRRF.setEnabled(false);
        jTxtIRRF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTxtIRRFFocusLost(evt);
            }
        });

        jTxtInss.setText("0,00");
        jTxtInss.setEnabled(false);
        jTxtInss.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTxtInssFocusLost(evt);
            }
        });

        jLabel12.setText("Emissão");

        jSpEmissao.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(1490980080000L), null, new java.util.Date(1491015540000L), java.util.Calendar.DAY_OF_MONTH));
        jSpEmissao.setEditor(new javax.swing.JSpinner.DateEditor(jSpEmissao, "dd/MM/yyyy"));
        jSpEmissao.setEnabled(false);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel11)
                    .addComponent(jLabel10)
                    .addComponent(jLabel12))
                .addGap(12, 12, 12)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTxtInss)
                    .addComponent(jTxtIRRF)
                    .addComponent(jTxtFaturamento)
                    .addComponent(jSpEmissao))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jSpEmissao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTxtFaturamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jTxtInss, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jTxtIRRF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel13.setText("Bruto a pagar");

        jLabel14.setText("Terceiros");

        jLabel15.setText("Líquido");

        jTxtLiquido.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTxtLiquido.setText("0,00");
        jTxtLiquido.setEnabled(false);

        jTxtTerceiros.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTxtTerceiros.setText("0,00");
        jTxtTerceiros.setEnabled(false);
        jTxtTerceiros.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTxtTerceirosFocusLost(evt);
            }
        });

        jLabel16.setText("Pagamento");

        jSpPgto.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(1495677215434L), null, null, java.util.Calendar.DAY_OF_MONTH));
        jSpPgto.setEditor(new javax.swing.JSpinner.DateEditor(jSpPgto, "dd/MM/yyyy"));
        jSpPgto.setEnabled(false);

        jSpVlrPagar.setText("0,00");
        jSpVlrPagar.setEnabled(false);
        jSpVlrPagar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jSpVlrPagarFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(jLabel15)
                    .addComponent(jLabel14)
                    .addComponent(jLabel16))
                .addGap(12, 12, 12)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jSpPgto, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                    .addComponent(jTxtTerceiros, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                    .addComponent(jTxtLiquido)
                    .addComponent(jSpVlrPagar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jSpPgto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jSpVlrPagar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jTxtTerceiros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jTxtLiquido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jBtnAddCte.setText("Adicionar");
        jBtnAddCte.setEnabled(false);
        jBtnAddCte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAddCteActionPerformed(evt);
            }
        });

        jBtnRemoveCte.setText("Excluir");
        jBtnRemoveCte.setEnabled(false);
        jBtnRemoveCte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnRemoveCteActionPerformed(evt);
            }
        });

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Resumo do Período"));

        jLabel9.setText("Acumulado");

        jLabel17.setText("I.R.R.F.");

        jLabel18.setText("Fretes");

        jTxtAcum.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTxtAcum.setText("0,00");
        jTxtAcum.setEnabled(false);

        jTxtAcumIrrf.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTxtAcumIrrf.setText("0,00");
        jTxtAcumIrrf.setEnabled(false);

        jTxtAcumQtdeFrete.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTxtAcumQtdeFrete.setEnabled(false);

        jLabel19.setText("I.N.S.S.");

        jLabel20.setText("Terceiros");

        jLabel21.setText("Categoria");

        jTxtCategoria.setEnabled(false);

        jTxtAcumTerc.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTxtAcumTerc.setText("0,00");
        jTxtAcumTerc.setEnabled(false);

        jTxtAcumInss.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTxtAcumInss.setText("0,00");
        jTxtAcumInss.setEnabled(false);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel17)
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTxtAcumQtdeFrete, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTxtAcumIrrf, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTxtAcum, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addComponent(jLabel20)
                    .addComponent(jLabel21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTxtCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTxtAcumTerc, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTxtAcumInss, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19)
                            .addComponent(jTxtAcumInss, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(jTxtAcumTerc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel21)
                            .addComponent(jTxtCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jTxtAcum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(jTxtAcumIrrf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(jTxtAcumQtdeFrete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTxtIdEst, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTxtIdTransportador, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jTxtNomeEst)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jBtnPesqEst))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(jTxtNomeTransportador)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jBtnPesqTransp)))))
                        .addContainerGap())
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jBtnAddCte, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jBtnRemoveCte, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 20, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTxtIdEst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTxtNomeEst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnPesqEst))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTxtIdTransportador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTxtNomeTransportador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnPesqTransp))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBtnAddCte)
                            .addComponent(jBtnRemoveCte))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jBtnGravar.setText("Gravar");
        jBtnGravar.setEnabled(false);
        jBtnGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnGravarActionPerformed(evt);
            }
        });

        jBtnEditar.setText("Editar");
        jBtnEditar.setEnabled(false);
        jBtnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnEditarActionPerformed(evt);
            }
        });

        jBtnAdicionar.setText("Incluir");
        jBtnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAdicionarActionPerformed(evt);
            }
        });

        jLabel8.setText("Conhecimentos");

        jTxtQtdCte.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTxtQtdCte.setEnabled(false);

        jLabel22.setText("Cod. Folha");

        jTxtCodFolha.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTxtCodFolha.setText("0");
        jTxtCodFolha.setEnabled(false);

        jBtnAtualizar.setText("Atualizar");
        jBtnAtualizar.setEnabled(false);
        jBtnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAtualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTxtQtdCte, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTxtCodFolha, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBtnAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtnAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtnGravar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBtnGravar, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jBtnEditar, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel22)
                            .addComponent(jTxtCodFolha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBtnAdicionar)
                            .addComponent(jLabel8)
                            .addComponent(jTxtQtdCte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtnAtualizar))))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAdicionarActionPerformed
        limpaCampos();

        if ("Incluir".equals(jBtnAdicionar.getText())) {
            desabilitarEdicao();
            jBtnAdicionar.setText("Cancelar");
            habilitarEdicao();
            jLblStatus.setText("INCLUINDO");

            if (cn.conecta()) {
                try {
                    cn.executeAtualizacao("DELETE FROM tmp_cte_rpa WHERE usu_inc = '" + ti.getUsuariosys() + "';");

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Não foi possível limpar a tabela temporária.");
                } finally {
                    cn.desconecta();
                }
            }

        } else {
            desabilitarEdicao();
        }
    }//GEN-LAST:event_jBtnAdicionarActionPerformed

    private void jBtnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnEditarActionPerformed
        if ("Editar".equals(jBtnEditar.getText())) {
            habilitarEdicao();
            jLblStatus.setText("ALTERANDO");

            jBtnEditar.setText("Cancelar");
            jBtnAdicionar.setEnabled(false);

            jBtnPesqEst.setEnabled(false);
            jBtnPesqTransp.setEnabled(false);
            jTxtIdEst.setEnabled(false);
            jTxtIdTransportador.setEnabled(false);

            jSpEmissao.setEnabled(false);

        } else {
            limpaCampos();
            desabilitarEdicao();
        }
    }//GEN-LAST:event_jBtnEditarActionPerformed

    private void jBtnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnPesquisarActionPerformed
        var_consulta = 1;

        System.out.println("Consultando RPA");

        jPesquisar.setVisible(true);

        montaLista();
    }//GEN-LAST:event_jBtnPesquisarActionPerformed

    private void jTxtPesquisa_MultiKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxtPesquisa_MultiKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jTblConsulta_Multi.setRowSelectionInterval(0, 0);
            IncluiPesquisa();
            jPesquisar.dispose();
        } else if (evt.getKeyCode() == KeyEvent.VK_F2) {
            System.out.println("Pesquisando por texto: " + jTxtPesquisa_Multi.getText() + ".");
            montaLista();
        }
    }//GEN-LAST:event_jTxtPesquisa_MultiKeyPressed

    private void jBtnConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnConfirmarActionPerformed
        IncluiPesquisa();
        jPesquisar.dispose();// TODO add your handling code here:
    }//GEN-LAST:event_jBtnConfirmarActionPerformed

    private void jBtnCancelar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnCancelar1ActionPerformed
        jPesquisar.setVisible(false);        // TODO add your handling code here:
        jPesquisar.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jBtnCancelar1ActionPerformed

    private void jTblConsulta_MultiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTblConsulta_MultiMouseClicked
        jBtnConfirmar.setEnabled(true);    // TODO add your handling code here:
    }//GEN-LAST:event_jTblConsulta_MultiMouseClicked

    private void jTblConsulta_MultiMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTblConsulta_MultiMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jTblConsulta_MultiMouseEntered

    private void jTblConsulta_MultiKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTblConsulta_MultiKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            IncluiPesquisa();
            jPesquisar.dispose();
        }
    }//GEN-LAST:event_jTblConsulta_MultiKeyPressed

    private void jBtnPesqEstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnPesqEstActionPerformed
        var_consulta = 2;
        System.out.println("Consultando Estabelecimento.");
        jPesquisar.setVisible(true);

        montaLista();
    }//GEN-LAST:event_jBtnPesqEstActionPerformed

    private void jBtnPesqTranspActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnPesqTranspActionPerformed
        var_consulta = 3;
        System.out.println("Consultando Transportador.");

        jPesquisar.setVisible(true);

        montaLista();
    }//GEN-LAST:event_jBtnPesqTranspActionPerformed

    private void jTxtPesquisa_MultiFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTxtPesquisa_MultiFocusLost

    }//GEN-LAST:event_jTxtPesquisa_MultiFocusLost

    private void jTxtIdTransportadorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTxtIdTransportadorFocusLost
        jTxtNomeTransportador.setText("");
        if (!"".equals(jTxtIdTransportador.getText())) {
            var_consulta = 33;
            IncluiPesquisa();
            calculaRPA();
        }
    }//GEN-LAST:event_jTxtIdTransportadorFocusLost

    private void jTxtIdEstFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTxtIdEstFocusLost
        jTxtNomeEst.setText("");
        if (!"".equals(jTxtIdEst.getText())) {
            var_consulta = 22;
            IncluiPesquisa();
        }

    }//GEN-LAST:event_jTxtIdEstFocusLost

    private void jBtnAddCteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAddCteActionPerformed
        if (!"".equals(jTxtNomeTransportador.getText())
                && !"".equals(jTxtNomeEst.getText())) {
            var_consulta = 4;

            jPesquisar.setVisible(true);

            montaLista();
        } else {
            JOptionPane.showMessageDialog(this, "Você precisa informar um estabelecimento e um transportador.");
        }
    }//GEN-LAST:event_jBtnAddCteActionPerformed

    private void jBtnRemoveCteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnRemoveCteActionPerformed
        int qtdeLinhas = jTable1.getSelectedRowCount();
        int linha;
        String chave;
        String sql;

        if (qtdeLinhas > 0) {
            if (cn.conecta()) {
                try {
                    for (int x = qtdeLinhas; x != 0; x--) {
                        linha = jTable1.getSelectedRow();

                        chave = jTable1.getValueAt(linha, 3).toString();

                        sql = "DELETE FROM tmp_cte_rpa WHERE chave = '" + chave + "';";
                        cn.executeAtualizacao(sql);

                        jTable1.removeRowSelectionInterval(linha, linha);

                    }
                } catch (Exception e) {
                    System.out.println(e);
                } finally {
                    cn.desconecta();
                }
            }

            var_consulta = 44;
            IncluiPesquisa();

        } else {
            JOptionPane.showMessageDialog(this, "Você precisa selecionar uma linha para excluir.");
        }

        somaCte();
        calculaRPA();

    }//GEN-LAST:event_jBtnRemoveCteActionPerformed

    private void jBtnGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnGravarActionPerformed
        if (!"".equals(jTxtNomeEst.getText()) && !"".equals(jTxtNomeTransportador.getText())) {

            //calculaRPA();
            int conhecimentos = jTable1.getRowCount();
            String id = jTxtId.getText();
            String competencia = jTxtCompetencia.getText();
            int sequencia = Integer.getInteger(jTxtSequencia.getText(), 0);
            String estabelecimento = jTxtIdEst.getText();
            String transportador = jTxtIdTransportador.getText();
            String emissao = dateOut.format(jSpEmissao.getValue());
            String pagamento = dateOut.format(jSpPgto.getValue());
            String faturamento = jTxtFaturamento.getText();
            String bruto = jSpVlrPagar.getText().replace(".", "").replace(",", ".");
            String inss = jTxtInss.getText();
            String irrf = jTxtIRRF.getText();
            String terceiros = jTxtTerceiros.getText();
            String liquido = jTxtLiquido.getText();
            String cod_folha = jTxtCodFolha.getText();
            String categoria = jTxtCategoria.getText();
            int numero;
            int usuario = ConexaoFB.userlog;
            System.out.println("Usuário logado: " + usuario);
            System.out.println("Variáveis carregadas para gravar.");
            Double inss_bc = cRpa.getInss_bc();
            Double irrf_bc = cRpa.getIrrf_bc();
            Double inss_aliq = cRpa.getInss_aliq();
            Double irrf_aliq = cRpa.getIrrf_aliq();
            String tipo_rpa = cRpa.getTipo_rpa();

            String sql;

            if ("Cancelar".equals(jBtnAdicionar.getText())) {
                //GRAVANDO A INCLUSÃO
                if (transp.conferePessoa()) {

                    if (Double.parseDouble(jTxtLiquido.getText().replace(".", "").replace(",", ".")) > 1.00) {

                        numero = Integer.parseInt(JOptionPane.showInputDialog(null, "Informe o número do RPA.", "Lançamento Manual", JOptionPane.QUESTION_MESSAGE));

                        if (numero > 0) {

                            if (cn.conecta()) {
                                try {
                                    competencia = this.competencia.format(jSpEmissao.getValue());
                                    sequencia = rpa.getSequencia(competencia, transportador, estabelecimento, 1);

                                    sql = "SHOW TABLE STATUS like 'rpa';";
                                    cn.executeConsulta(sql);
                                    while (cn.rs.next()) {
                                        id = cn.rs.getString("auto_increment");
                                    }
                                    cn.rs.close();

                                    sql = "INSERT INTO rpa (estabelecimento,sequencia,"
                                            + "transportador,emissao,pagamento,cod_folha,faturamento,"
                                            + "vlr_bruto,inss,terceiros,irrf,liquido,categoria,"
                                            + "usu_inc,data_inc,competencia,numero,inss_bc,"
                                            + "inss_aliq,irrf_bc,irrf_aliq,tipo_rpa,integ_folha,codigo_fin) VALUES ('"
                                            + estabelecimento + "','" + sequencia + "','"
                                            + transportador + "','" + emissao + "','" + pagamento + "',"
                                            + cod_folha + ",'" + faturamento.replace(".", "").replace(",", ".") + "','" + bruto + "','"
                                            + inss.replace(".", "").replace(",", ".") + "','" + terceiros.replace(".", "").replace(",", ".") + "','" + irrf.replace(".", "").replace(",", ".") + "','"
                                            + liquido.replace(".", "").replace(",", ".") + "','" + categoria + "'," + usuario + ","
                                            + " current_date(), '" + competencia + "','" + numero + "','"
                                            + inss_bc + "','" + inss_aliq + "','" + irrf_bc + "','" + irrf_aliq + "','" + tipo_rpa + "','X','0');";

                                    if (cn.executeAtualizacao(sql)) {
                                        sql = "INSERT INTO rpa_detalhe (codigo,chave,numero,data,valor,peso,tarifa,pedagio) "
                                                + "SELECT '" + id + "' as codigo,chave,numero,data,valor,peso,tarifa,pedagio "
                                                + "FROM tmp_cte_rpa WHERE usu_inc = '" + ti.getUsuariosys() + "';";
                                        if (cn.executeAtualizacao(sql)) {

                                            jTxtId.setText(id);
                                            jTxtCompetencia.setText(competencia);
                                            jTxtSequencia.setText(sequencia + "");

                                            if (cd.getLanca_fin()) {
                                                int financeiro = JOptionPane.showConfirmDialog(null, "Deseja integrar com o financeiro agora?", "Integração automática", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
                                                switch (financeiro) {
                                                    case 0:
                                                        boolean resposta = integ.integraFinanceiro(jTxtId.getText());
                                                        if (resposta) {
                                                            JOptionPane.showMessageDialog(this, "Integração realizada com sucesso");
                                                        } else {
                                                            JOptionPane.showMessageDialog(this, "Não foi possível realizar a integração.");
                                                        }
                                                        break;
                                                    default:
                                                        JOptionPane.showMessageDialog(null, "RPA não integrado no financeiro.");
                                                        break;
                                                }
                                            }
                                        }
                                    }

                                } catch (Exception e) {
                                    JOptionPane.showMessageDialog(this, "Não foi possível gravar o RPA.");
                                } finally {
                                    cn.desconecta();
                                }
                            }
                        } else {
                            JOptionPane.showMessageDialog(this, "Não há dados a serem gravados.");
                        }

                    } else {
                        JOptionPane.showMessageDialog(this, "Não foi possível gravar o RPA.");
                    }
                } // FIM DO COMANDO CONFERE PESSOA
            } else if (cn.conecta()) {
                try {
                    sql = "DELETE FROM rpa_detalhe WHERE codigo = '" + id + "';";
                    cn.executeAtualizacao(sql);

                    sql = "INSERT INTO rpa_detalhe (codigo,chave,numero,data,valor,peso,tarifa,pedagio) "
                            + "SELECT '" + id + "' as codigo,chave,numero,data,valor,peso,tarifa,pedagio "
                            + "FROM tmp_cte_rpa WHERE usu_inc = '" + ti.getUsuariosys() + "';";
                    cn.executeAtualizacao(sql);

                    sql = "UPDATE rpa SET pagamento = '" + pagamento + "',"
                            + "faturamento = '" + faturamento.replace(".", "").replace(",", ".") + "', vlr_bruto = '" + bruto + "', "
                            + "inss = '" + inss.replace(".", "").replace(",", ".") + "', "
                            + "terceiros = '" + terceiros.replace(".", "").replace(",", ".") + "',"
                            + "irrf ='" + irrf.replace(".", "").replace(",", ".") + "',"
                            + "liquido = '" + liquido.replace(".", "").replace(",", ".") + "',"
                            + "usu_alt = '" + usuario + "', data_alt = current_date(),"
                            + "inss_bc = '" + inss_bc + "', inss_aliq = '" + inss_aliq + "', "
                            + "irrf_bc = '" + irrf_bc + "', irrf_aliq = '" + irrf_aliq + "' "
                            + "WHERE codigo = '" + id + "';";
                    cn.executeAtualizacao(sql);

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Não foi possível atualizar o RPA.");
                } finally {
                    cn.desconecta();
                }
            }

            //IMPRIME RPA
            if (cn.getResultadoUpd() < 1 && !"".equals(id)) {

                /*sql = "SELECT * FROM rel_rpa WHERE codigo = '" + id + "' "
                        + "union all "
                        + "SELECT * FROM rel_rpa WHERE codigo = '" + id + "' ;";
                print.imprimir(sql, "rpa.jasper", "Recibo de Pagamento de Autônomo");*/
                desabilitarEdicao();

            }
        } else {
            JOptionPane.showMessageDialog(null, "Número do RPA não definido.");
        }

    }//GEN-LAST:event_jBtnGravarActionPerformed

    private void jBtnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAtualizarActionPerformed
        calculaRPA();
    }//GEN-LAST:event_jBtnAtualizarActionPerformed

    private void jTxtIdFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTxtIdFocusLost
        String id = jTxtId.getText();
        limpaCampos();
        desabilitarEdicao();
        jTxtId.setText(id);
        if (!"".equals(jTxtId.getText())) {
            var_consulta = 11;
            IncluiPesquisa();
        }
    }//GEN-LAST:event_jTxtIdFocusLost

    private void jSpVlrPagarFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jSpVlrPagarFocusLost
        calculaRPA();
    }//GEN-LAST:event_jSpVlrPagarFocusLost

    private void jTxtInssFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTxtInssFocusLost
        calculaLiquido();
    }//GEN-LAST:event_jTxtInssFocusLost

    private void jTxtTerceirosFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTxtTerceirosFocusLost
        calculaLiquido();
    }//GEN-LAST:event_jTxtTerceirosFocusLost

    private void jTxtIRRFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTxtIRRFFocusLost
        calculaLiquido();
    }//GEN-LAST:event_jTxtIRRFFocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnAddCte;
    private javax.swing.JButton jBtnAdicionar;
    private javax.swing.JButton jBtnAtualizar;
    private javax.swing.JButton jBtnCancelar1;
    private javax.swing.JButton jBtnConfirmar;
    private javax.swing.JButton jBtnEditar;
    private javax.swing.JButton jBtnGravar;
    private javax.swing.JButton jBtnPesqEst;
    private javax.swing.JButton jBtnPesqTransp;
    private javax.swing.JButton jBtnPesquisar;
    private javax.swing.JButton jBtnRemoveCte;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLblStatus;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JFrame jPesquisar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSpinner jSpEmissao;
    private javax.swing.JSpinner jSpPgto;
    private javax.swing.JTextField jSpVlrPagar;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTblConsulta_Multi;
    private javax.swing.JTextField jTxtAcum;
    private javax.swing.JTextField jTxtAcumInss;
    private javax.swing.JTextField jTxtAcumIrrf;
    private javax.swing.JTextField jTxtAcumQtdeFrete;
    private javax.swing.JTextField jTxtAcumTerc;
    private javax.swing.JTextField jTxtCategoria;
    private javax.swing.JTextField jTxtCodFolha;
    private javax.swing.JTextField jTxtCompetencia;
    private javax.swing.JTextField jTxtFaturamento;
    private javax.swing.JTextField jTxtIRRF;
    private javax.swing.JTextField jTxtId;
    private javax.swing.JTextField jTxtIdEst;
    private javax.swing.JTextField jTxtIdTransportador;
    private javax.swing.JTextField jTxtInss;
    private javax.swing.JTextField jTxtLiquido;
    private javax.swing.JTextField jTxtNomeEst;
    private javax.swing.JTextField jTxtNomeTransportador;
    private javax.swing.JTextField jTxtPesquisa_Multi;
    private javax.swing.JTextField jTxtQtdCte;
    private javax.swing.JTextField jTxtSequencia;
    private javax.swing.JTextField jTxtTerceiros;
    // End of variables declaration//GEN-END:variables

    private void habilitarEdicao() {

        jTxtId.setEnabled(false);
        jTxtIdEst.setEnabled(true);
        jTxtIdTransportador.setEnabled(true);
        jTxtInss.setEnabled(true);
        jTxtTerceiros.setEnabled(true);
        jTxtIRRF.setEnabled(true);

        jSpVlrPagar.setEnabled(true);
        jSpEmissao.setEnabled(true);
        jSpPgto.setEnabled(true);

        jBtnPesquisar.setEnabled(false);
        jBtnPesqEst.setEnabled(true);
        jBtnPesqTransp.setEnabled(true);
        jBtnAddCte.setEnabled(true);
        jBtnRemoveCte.setEnabled(true);
        jBtnGravar.setEnabled(true);
        jBtnAtualizar.setEnabled(true);

    }

    private void desabilitarEdicao() {
        jLblStatus.setText("");

        jBtnAdicionar.setText("Incluir");
        jBtnEditar.setText("Editar");

        jTxtId.setEnabled(true);
        jTxtIdEst.setEnabled(false);
        jTxtIdTransportador.setEnabled(false);
        jTxtInss.setEnabled(false);
        jTxtTerceiros.setEnabled(false);
        jTxtIRRF.setEnabled(false);

        jSpVlrPagar.setEnabled(false);
        jSpEmissao.setEnabled(false);
        jSpPgto.setEnabled(false);

        jBtnPesquisar.setEnabled(true);
        jBtnAdicionar.setEnabled(true);
        jBtnPesqEst.setEnabled(false);
        jBtnPesqTransp.setEnabled(false);
        jBtnAddCte.setEnabled(false);
        jBtnRemoveCte.setEnabled(false);
        jBtnGravar.setEnabled(false);
        jBtnAtualizar.setEnabled(false);
        jBtnEditar.setEnabled(false);
    }

    private void limpaCampos() {
        montaTabela();

        jTxtId.setText("");
        jTxtIdEst.setText("");
        jTxtIdTransportador.setText("");
        jTxtNomeEst.setText("");
        jTxtNomeTransportador.setText("");
        jTxtCompetencia.setText("");
        jTxtSequencia.setText("0");
        jTxtFaturamento.setText("0,00");
        jTxtInss.setText("0,00");
        jTxtTerceiros.setText("0,00");
        jTxtIRRF.setText("0,00");
        jTxtLiquido.setText("0,00");
        jTxtAcum.setText("0,00");
        jTxtAcumInss.setText("0,00");
        jTxtAcumIrrf.setText("0,00");
        jTxtAcumQtdeFrete.setText("");
        jTxtCategoria.setText("");
        jTxtCodFolha.setText("0");
        jTxtQtdCte.setText("");

        jSpVlrPagar.setText("0,00");
    }

    private void montaLista() {
        DefaultTableModel lista = (DefaultTableModel) jTblConsulta_Multi.getModel();

        lista.setRowCount(0);
        lista.setColumnCount(0);

        String sql;
        String condicao;

        String txt = jTxtPesquisa_Multi.getText().toUpperCase();

        switch (var_consulta) {
            case 1:

                lista.addColumn("Codigo");
                lista.addColumn("Unidade");
                lista.addColumn("Numero");
                lista.addColumn("Transportador");
                lista.addColumn("Valor");
                lista.addColumn("Emissão");

                jTblConsulta_Multi.getColumnModel().getColumn(0).setMaxWidth(60);
                jTblConsulta_Multi.getColumnModel().getColumn(0).setMinWidth(60);
                jTblConsulta_Multi.getTableHeader().getColumnModel().getColumn(0).setMaxWidth(60);
                jTblConsulta_Multi.getTableHeader().getColumnModel().getColumn(0).setMinWidth(60);
                jTblConsulta_Multi.getColumnModel().getColumn(1).setMaxWidth(60);
                jTblConsulta_Multi.getColumnModel().getColumn(1).setMinWidth(60);
                jTblConsulta_Multi.getTableHeader().getColumnModel().getColumn(1).setMaxWidth(60);
                jTblConsulta_Multi.getTableHeader().getColumnModel().getColumn(1).setMinWidth(60);
                jTblConsulta_Multi.getColumnModel().getColumn(2).setMaxWidth(60);
                jTblConsulta_Multi.getColumnModel().getColumn(2).setMinWidth(60);
                jTblConsulta_Multi.getTableHeader().getColumnModel().getColumn(2).setMaxWidth(60);
                jTblConsulta_Multi.getTableHeader().getColumnModel().getColumn(2).setMinWidth(60);
                jTblConsulta_Multi.getColumnModel().getColumn(4).setMaxWidth(80);
                jTblConsulta_Multi.getColumnModel().getColumn(4).setMinWidth(80);
                jTblConsulta_Multi.getTableHeader().getColumnModel().getColumn(4).setMaxWidth(80);
                jTblConsulta_Multi.getTableHeader().getColumnModel().getColumn(4).setMinWidth(80);
                jTblConsulta_Multi.getColumnModel().getColumn(5).setMaxWidth(80);
                jTblConsulta_Multi.getColumnModel().getColumn(5).setMinWidth(80);
                jTblConsulta_Multi.getTableHeader().getColumnModel().getColumn(5).setMaxWidth(80);
                jTblConsulta_Multi.getTableHeader().getColumnModel().getColumn(5).setMinWidth(80);

                if (!"".equals(txt)) {
                    condicao = " AND UPPER(b.nome) like '%" + txt + "%' "
                            + "OR a.numero LIKE '%" + txt + "%' ";
                } else {
                    condicao = " ";
                }

                sql = "SELECT a.codigo,a.estabelecimento,a.numero,b.nome,a.vlr_bruto,a.emissao "
                        + "FROM rpa a LEFT JOIN cad_pessoas b on (b.codigo = a.transportador) "
                        + "WHERE a.integ_folha = 'X' "
                        + condicao
                        + "ORDER BY b.nome, a.numero";

                if (cn.conecta()) {
                    try {
                        cn.executeConsulta(sql);
                        while (cn.rs.next()) {
                            lista.addRow(new String[]{
                                cn.rs.getString("codigo"),
                                cn.rs.getString("estabelecimento"),
                                cn.rs.getString("numero"),
                                cn.rs.getString("nome"),
                                df.format(cn.rs.getDouble("vlr_bruto")),
                                dateIn.format(cn.rs.getDate("emissao"))
                            });
                        }
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(this, "Não foi possível montar a lista de RPAs.");
                    } finally {
                        cn.desconecta();
                    }
                }

                break;
            case 2:

                lista.addColumn("Codigo");
                lista.addColumn("Nome");

                jTblConsulta_Multi.getColumnModel().getColumn(0).setMaxWidth(40);
                jTblConsulta_Multi.getColumnModel().getColumn(0).setMinWidth(40);
                jTblConsulta_Multi.getTableHeader().getColumnModel().getColumn(0).setMaxWidth(40);
                jTblConsulta_Multi.getTableHeader().getColumnModel().getColumn(0).setMinWidth(40);

                sql = "SELECT * FROM cad_estabelecimentos ORDER BY razao_social;";

                cn.conecta();
                cn.executeConsulta(sql);
                try {
                    while (cn.rs.next()) {
                        lista.addRow(new String[]{
                            cn.rs.getString("id"),
                            cn.rs.getString("razao_social")
                        });
                    }
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, "Não foi possível consultar o banco de dados.");
                } finally {
                    cn.desconecta();
                }

                break;

            case 3:
                lista.addColumn("Código");
                lista.addColumn("Nome");
                lista.addColumn("CPF");

                jTblConsulta_Multi.getColumnModel().getColumn(0).setMaxWidth(60);
                jTblConsulta_Multi.getColumnModel().getColumn(0).setMinWidth(60);
                jTblConsulta_Multi.getTableHeader().getColumnModel().getColumn(0).setMaxWidth(60);
                jTblConsulta_Multi.getTableHeader().getColumnModel().getColumn(0).setMinWidth(60);

                if (!"".equals(txt)) {
                    condicao = " AND UPPER(a.nome) LIKE '%" + txt + "%' "
                            + "OR a.cpf_cnpj like '%" + txt + "%' ";
                } else {
                    condicao = " ";
                }

                sql = "select a.codigo, a.nome, a.cpf_cnpj from cad_terceiros a "
                        + "WHERE a.codigo in (select cliente from cad_veiculos WHERE tipo_veiculo = 0 ) "
                        + "AND a.pessoa_fj = 'F' "
                        + condicao
                        + "ORDER BY a.nome";

                if (cnfb.conecta()) {
                    try {
                        cnfb.executeConsulta(sql);
                        while (cnfb.rs.next()) {
                            lista.addRow(new String[]{
                                cnfb.rs.getString("codigo"),
                                cnfb.rs.getString("nome"),
                                cnfb.rs.getString("cpf_cnpj")
                            });
                        }
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(this, "Não foi possível consultar o banco de dados.");
                    } finally {
                        cnfb.desconecta();
                    }
                }

                break;

            case 4:

                lista.addColumn("CTe");
                lista.addColumn("Data");
                lista.addColumn("Valor");
                lista.addColumn("Chave");
                lista.addColumn("Peso");
                lista.addColumn("pedagio");

                jTblConsulta_Multi.getColumnModel().getColumn(0).setMaxWidth(60);
                jTblConsulta_Multi.getColumnModel().getColumn(0).setMinWidth(60);
                jTblConsulta_Multi.getTableHeader().getColumnModel().getColumn(0).setMaxWidth(60);
                jTblConsulta_Multi.getTableHeader().getColumnModel().getColumn(0).setMinWidth(60);
                jTblConsulta_Multi.getColumnModel().getColumn(1).setMaxWidth(100);
                jTblConsulta_Multi.getColumnModel().getColumn(1).setMinWidth(100);
                jTblConsulta_Multi.getTableHeader().getColumnModel().getColumn(1).setMaxWidth(100);
                jTblConsulta_Multi.getTableHeader().getColumnModel().getColumn(1).setMinWidth(100);
                jTblConsulta_Multi.getColumnModel().getColumn(2).setMaxWidth(80);
                jTblConsulta_Multi.getColumnModel().getColumn(2).setMinWidth(80);
                jTblConsulta_Multi.getTableHeader().getColumnModel().getColumn(2).setMaxWidth(80);
                jTblConsulta_Multi.getTableHeader().getColumnModel().getColumn(2).setMinWidth(80);
                jTblConsulta_Multi.getColumnModel().getColumn(4).setMaxWidth(50);
                jTblConsulta_Multi.getColumnModel().getColumn(4).setMinWidth(50);
                jTblConsulta_Multi.getTableHeader().getColumnModel().getColumn(4).setMaxWidth(50);
                jTblConsulta_Multi.getTableHeader().getColumnModel().getColumn(4).setMinWidth(50);
                jTblConsulta_Multi.getColumnModel().getColumn(5).setMaxWidth(0);
                jTblConsulta_Multi.getColumnModel().getColumn(5).setMinWidth(0);
                jTblConsulta_Multi.getTableHeader().getColumnModel().getColumn(5).setMaxWidth(0);
                jTblConsulta_Multi.getTableHeader().getColumnModel().getColumn(5).setMinWidth(0);

                String idEst = jTxtIdEst.getText();
                String idTransp = jTxtIdTransportador.getText();

                if (!"".equals(txt)) {
                    condicao = " AND numero LIKE '%" + txt + "%' "
                            + " OR chave LIKE '%" + txt + "%' ";
                } else {
                    condicao = " ";
                }

                sql = "SELECT * FROM conhecimentos WHERE emitente = " + idEst
                        + " AND cod_transportador = " + idTransp
                        + condicao
                        + " AND chave NOT IN (SELECT chave FROM tmp_cte_rpa) "
                        + " AND chave NOT IN (SELECT chave FROM rpa_detalhe WHERE codigo != '" + jTxtId.getText() + "') "
                        + " ORDER BY numero, emissao";

                if (cn.conecta()) {
                    try {
                        cn.executeConsulta(sql);
                        while (cn.rs.next()) {
                            lista.addRow(new String[]{
                                cn.rs.getString("numero"),
                                dateIn.format(cn.rs.getDate("emissao")),
                                df.format(cn.rs.getDouble("valor")),
                                cn.rs.getString("chave"),
                                df.format(cn.rs.getDouble("peso")),
                                df.format(cn.rs.getDouble("pedagio"))
                            });
                        }

                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(this, "Não foi possível consultar os conhecimentos.");
                    } finally {
                        cn.desconecta();
                    }
                }

        }

        jTblConsulta_Multi.setRowSelectionInterval(0, 0);
    }

    private void IncluiPesquisa() {

        System.out.println("Incluindo pesquisa, variável: " + var_consulta + ".");

        DefaultTableModel lista = (DefaultTableModel) jTable1.getModel();

        int linha = jTblConsulta_Multi.getSelectedRow();
        int id;
        String sql;

        switch (var_consulta) {
            case 1:
                jTxtId.setText(jTblConsulta_Multi.getValueAt(linha, 0).toString());

            case 11:

                if (integ.buscaRpa(jTxtId.getText())) {
                    System.out.println("\n\nExecutando preenchimento de RPA.\n");
                    if (cn.conecta()) {
                        try {
                            cn.executeAtualizacao("DELETE FROM tmp_cte_rpa WHERE usu_inc = '" + ti.getUsuariosys() + "';");
                            cn.executeAtualizacao("INSERT INTO tmp_cte_rpa (chave,numero,data,valor,peso,tarifa,pedagio,usu_inc) "
                                    + "SELECT chave,numero,data,valor,peso,tarifa,pedagio,'" + ti.getUsuariosys() + "' "
                                    + "FROM rpa_detalhe "
                                    + "WHERE codigo = '" + jTxtId.getText() + "';");
                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(this, "Não foi possível limpar a tabela temporária.");
                        } finally {
                            System.out.println("Tabela temporária está limpa.");
                            cn.desconecta();
                        }
                    }

                    jTxtIdEst.setText(integ.getEstabelecimento());
                    jTxtIdTransportador.setText(integ.getFornecedor());
                    jTxtNomeTransportador.setText(integ.getNome_fornecedor());
                    jTxtNomeEst.setText(integ.getNome_estabelecimento());
                    jTxtCompetencia.setText(integ.getCompetencia());
                    jTxtSequencia.setText(integ.getSequencia());
                    jTxtCodFolha.setText(integ.getCod_folha());
                    jSpVlrPagar.setText(integ.getValor_bruto().toString());
                    jTxtInss.setText(df.format(integ.getInss()));
                    jTxtIRRF.setText(df.format(integ.getIrrf()));
                    jTxtTerceiros.setText(df.format(integ.getTerceiros()));
                    jTxtFaturamento.setText(df.format(integ.getFaturamento()));
                    jTxtLiquido.setText(df.format(integ.getValor_liquido()));
                    jTxtCategoria.setText(integ.getCategoria());
                    jSpEmissao.setValue(integ.getDt_emissao());
                    jSpPgto.setValue(integ.getDt_vencimento());

                    buscaAcumulados();

                    sql = "SELECT * FROM tmp_cte_rpa WHERE usu_inc = '" + ti.getUsuariosys() + "';";

                    if (cn.conecta()) {
                        try {
                            cn.executeConsulta(sql);
                            while (cn.rs.next()) {
                                lista.addRow(new String[]{
                                    cn.rs.getString("numero"),
                                    dateIn.format(cn.rs.getDate("data")),
                                    df.format(cn.rs.getDouble("valor")),
                                    cn.rs.getString("chave")
                                });
                            }
                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(this, "Não foi possível recuperar os CTEs.");
                        } finally {
                            cn.desconecta();
                        }
                    }

                    int quantidade = 0;

                    //SOMA TOTAL DOS CONHECIMENTOS
                    for (int x = 0; x < jTable1.getRowCount(); x++) {
                        quantidade++;
                    }

                    jTxtQtdCte.setText(quantidade + "");

                    if (!"".equals(jTxtNomeTransportador.getText())) {
                        if (integ.getCodigo() > 0) {
                            JOptionPane.showMessageDialog(this, "Não é possível editar RPA já integrado ao Financeiro.");
                        } else if (res.getQtdApos() > 0) {
                            JOptionPane.showMessageDialog(this, "Não é possível editar o RPA. Existem recibos emitidos a partir de " + dateIn.format(integ.getDt_emissao()) + " para este transportador.");
                        } else {
                            jBtnEditar.setEnabled(true);
                        }
                    }
                }
                break;
            case 2:
                jTxtIdEst.setText(jTblConsulta_Multi.getValueAt(linha, 0).toString());

            case 22:
                id = Integer.parseInt(jTxtIdEst.getText());
                estab.buscaEstabelecimento(id);
                jTxtNomeEst.setText(estab.getRazao_social());
                break;
            case 3:
                jTxtIdTransportador.setText(jTblConsulta_Multi.getValueAt(linha, 0).toString());

            case 33:
                id = Integer.parseInt(jTxtIdTransportador.getText());
                Date data = (Date) jSpEmissao.getValue();

                transp.buscaPessoa(id, dateIn.format(data));

                jTxtNomeTransportador.setText(transp.getNome());
                montaTabela();

                jTxtCategoria.setText(transp.getClassificacao());

                break;

            case 4:

                cd.carregaProp();

                String chaveCte;
                String numeroCte;
                Double valorCte;
                String dataCte;
                Double peso;
                Double tarifa;
                Double pedagio;

                if (cn.conecta()) {
                    try {
                        for (int x = jTblConsulta_Multi.getSelectedRowCount(); x != 0; x--) {

                            linha = jTblConsulta_Multi.getSelectedRow();
                            System.out.println("Linha selecionada: " + linha);

                            try {
                                numeroCte = jTblConsulta_Multi.getValueAt(linha, 0).toString();
                                dataCte = dateOut.format(dateIn.parse(jTblConsulta_Multi.getValueAt(linha, 1).toString()));
                                valorCte = Double.parseDouble(jTblConsulta_Multi.getValueAt(linha, 2).toString().replace(".", "").replace(",", "."));
                                chaveCte = jTblConsulta_Multi.getValueAt(linha, 3).toString();
                                peso = Double.parseDouble(jTblConsulta_Multi.getValueAt(linha, 4).toString().replace(".", "").replace(",", "."));
                                pedagio = Double.parseDouble(jTblConsulta_Multi.getValueAt(linha, 5).toString().replace(".", "").replace(",", "."));
                                if (false) {
                                    tarifa = Double.parseDouble(JOptionPane.showInputDialog(null, "Informe o valor da tarifa para o CTE " + numeroCte + ": ", "Valor da Tarifa", JOptionPane.QUESTION_MESSAGE).replace(".", "").replace(",", "."));
                                } else {
                                    tarifa = 0.00;
                                }

                                sql = "INSERT INTO tmp_cte_rpa (chave,numero,data,valor,peso,tarifa,pedagio,usu_inc) "
                                        + "VALUES ('" + chaveCte + "','" + numeroCte + "','" + dataCte + "','" + valorCte + "','" + peso + "','" + tarifa + "','" + pedagio + "','" + ti.getUsuariosys() + "');";

                                cn.executeAtualizacao(sql);
                                System.out.println("Contagem regressiva das linhas: " + x);
                                jTblConsulta_Multi.removeRowSelectionInterval(linha, linha);

                            } catch (Exception e) {
                                JOptionPane.showMessageDialog(this, "Não foi possível fazer a conversão de tipos.");
                                break;
                            }

                        }
                    } catch (Exception e) {
                    } finally {
                        cn.desconecta();
                    }
                }

            case 44:

                montaTabela();

                sql = "SELECT * FROM tmp_cte_rpa WHERE usu_inc = '" + ti.getUsuariosys() + "';";

                if (cn.conecta()) {
                    try {
                        cn.executeConsulta(sql);
                        while (cn.rs.next()) {
                            lista.addRow(new String[]{
                                cn.rs.getString("numero"),
                                dateIn.format(cn.rs.getDate("data")),
                                df.format(cn.rs.getDouble("valor")),
                                cn.rs.getString("chave"),
                                df.format(cn.rs.getDouble("peso")),
                                df.format(cn.rs.getDouble("tarifa")),
                                df.format(cn.rs.getDouble("pedagio"))
                            });
                        }
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(this, "Não foi possível recuperar os CTEs.");
                    } finally {
                        cn.desconecta();
                    }
                }

                somaCte();

                break;
        }
    }

    private void somaCte() {

        Double receita = 0.00;
        Double bruto_pagar = 0.00;
        Double peso = 0.00;
        Double tarifa = 0.00;
        Double pedagio = 0.00;
        int quantidade = 0;

        //SOMA TOTAL DOS CONHECIMENTOS
        for (int x = 0; x < jTable1.getRowCount(); x++) {
            receita += Double.parseDouble(jTable1.getValueAt(x, 2).toString().replace(".", "").replace(",", "."));
            peso = Double.parseDouble(jTable1.getValueAt(x, 4).toString().replace(".", "").replace(",", "."));
            tarifa = Double.parseDouble(jTable1.getValueAt(x, 5).toString().replace(".", "").replace(",", "."));
            if (cd.getConsidera_pedagio()) {
                pedagio = Double.parseDouble(jTable1.getValueAt(x, 6).toString().replace(".", "").replace(",", "."));
            } else {
                pedagio = 0.00;
            }
            bruto_pagar += (peso * tarifa) + pedagio;
            quantidade++;
        }

        try {
            jTxtFaturamento.setText(df.format(receita));

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }

        bruto_pagar = receita * (1.00 - transp.getMargem());

        jSpVlrPagar.setText(df.format(bruto_pagar));
        System.out.println("Soma dos Conhecimentos: " + receita);
        System.out.println("Valor bruto da RPA: " + df.format(bruto_pagar));
        System.out.println("Soma do Pedágio: " + pedagio);

        jTxtQtdCte.setText(quantidade + "");

        calculaRPA();
    }

    private void calculaRPA() {

        if (!"".equals(jTxtNomeTransportador.getText())
                && !"".equals(jTxtNomeEst.getText())) {

            buscaAcumulados();

            Date dataEmissao = null;
            Date dataVencimento = null;

            System.out.println("Calcula RPA: Definindo Parâmetros");

            try {
                dataEmissao = dateOut.parse(dateOut.format(jSpEmissao.getValue()));
                dataVencimento = dateOut.parse(dateOut.format(jSpPgto.getValue()));
                System.out.println("Datas definidas.");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Não foi possível converter as datas. " + e);
            }
            Double vlrBrutoPagar = Double.parseDouble(jSpVlrPagar.getText().replace(".", "").replace(",", "."));
            System.out.println("Valor bruto definido:" + vlrBrutoPagar);

            Double inss;
            Double terceiros;
            Double irrf;
            Double liquido;

            Double acumulado = Double.parseDouble(jTxtAcum.getText().replace(".", "").replace(",", "."));
            Double acum_inss = Double.parseDouble(jTxtAcumInss.getText().replace(".", "").replace(",", "."));
            Double acum_irrf = Double.parseDouble(jTxtAcumIrrf.getText().replace(".", "").replace(",", "."));
            Double acum_terceiros = Double.parseDouble(jTxtAcumTerc.getText().replace(".", "").replace(",", "."));

            String categoria = jTxtCategoria.getText();

            cRpa.calculaRPA(vlrBrutoPagar, acumulado, acum_inss, acum_irrf, acum_terceiros, categoria);

            inss = cRpa.getInss();
            terceiros = cRpa.getTerceiros();
            irrf = cRpa.getIrrf();
            liquido = cRpa.getValor_liquido();

            jTxtInss.setText(df.format(inss));
            jTxtIRRF.setText(df.format(irrf));
            jTxtTerceiros.setText(df.format(terceiros));
            jTxtLiquido.setText(df.format(liquido));

        } else {
            JOptionPane.showMessageDialog(this, "Defina um estabelecimento e um transportador para continuar", "Calculadora RPA", JOptionPane.ERROR_MESSAGE);
            if ("".equals(jTxtNomeEst.getText())) {
                jTxtIdEst.requestFocus();
            } else {
                jTxtIdTransportador.requestFocus();
            }
        }
    }

    private void montaTabela() {
        DefaultTableModel lista = (DefaultTableModel) jTable1.getModel();

        lista.setColumnCount(0);
        lista.setRowCount(0);

        lista.addColumn("Conhecimento");
        lista.addColumn("Data");
        lista.addColumn("Valor");
        lista.addColumn("Chave");
        lista.addColumn("Peso");
        lista.addColumn("Tarifa");
        lista.addColumn("pedagio");

        jTable1.getColumnModel().getColumn(3).setMaxWidth(0);
        jTable1.getColumnModel().getColumn(3).setMinWidth(0);
        jTable1.getTableHeader().getColumnModel().getColumn(3).setMaxWidth(0);
        jTable1.getTableHeader().getColumnModel().getColumn(3).setMinWidth(0);
        jTable1.getColumnModel().getColumn(4).setMaxWidth(0);
        jTable1.getColumnModel().getColumn(4).setMinWidth(0);
        jTable1.getTableHeader().getColumnModel().getColumn(4).setMaxWidth(0);
        jTable1.getTableHeader().getColumnModel().getColumn(4).setMinWidth(0);
        jTable1.getColumnModel().getColumn(5).setMaxWidth(0);
        jTable1.getColumnModel().getColumn(5).setMinWidth(0);
        jTable1.getTableHeader().getColumnModel().getColumn(5).setMaxWidth(0);
        jTable1.getTableHeader().getColumnModel().getColumn(5).setMinWidth(0);
        jTable1.getColumnModel().getColumn(6).setMaxWidth(0);
        jTable1.getColumnModel().getColumn(6).setMinWidth(0);
        jTable1.getTableHeader().getColumnModel().getColumn(6).setMaxWidth(0);
        jTable1.getTableHeader().getColumnModel().getColumn(6).setMinWidth(0);
    }

    private void buscaAcumulados() {

        Date data = null;
        String id;

        if (!"".equals(jTxtId.getText())) {
            id = jTxtId.getText();
        } else {
            id = null;
        }

        try {
            data = dateOut.parse(dateOut.format(jSpEmissao.getValue()));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Não foi possível converer a data. " + e);
        }
        System.out.println("Data formatada: " + data);
        res.calculaResumo(data, jTxtIdTransportador.getText(), jTxtId.getText());

        jTxtAcum.setText(res.getAcumulado());
        jTxtAcumInss.setText(res.getInss());
        jTxtAcumIrrf.setText(res.getIrrf());
        jTxtAcumTerc.setText(res.getTerceiros());
        jTxtAcumQtdeFrete.setText(res.getFretes());
    }

    private void calculaLiquido() {
        Double vlrBrutoPagar = Double.parseDouble(jSpVlrPagar.getText().replace(".", "").replace(",", "."));
        System.out.println("Valor bruto definido:" + vlrBrutoPagar);

        Double inss = Double.parseDouble(jTxtInss.getText().replace(".", "").replace(",", "."));
        Double terceiros = Double.parseDouble(jTxtTerceiros.getText().replace(".", "").replace(",", "."));
        Double irrf = Double.parseDouble(jTxtIRRF.getText().replace(".", "").replace(",", "."));
        Double liquido = vlrBrutoPagar - inss - irrf - terceiros;

        jTxtLiquido.setText(df.format(liquido));

    }
}
